# Redis values for swiggy_dog_fooding project
# Based on Bitnami Redis chart configuration

# Global configuration
global:
  storageClass: "niq-sc"
  imageRegistry: "swiggy.azurecr.io"

# Redis configuration
redis:
  enabled: true
  
  # Authentication
  auth:
    enabled: true
    sentinel: false
    password: "swiggy_redis_password_123"
  
  # Architecture (standalone)
  architecture: standalone
  
  # Master configuration
  master:
    persistence:
      enabled: true
      storageClass: "niq-sc"
      size: 8Gi
      accessModes:
        - ReadWriteOnce
    
    # Service configuration
    service:
      type: ClusterIP
      port: 6379
    
    # Resources
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    
    # Security context
    securityContext:
      enabled: true
      runAsUser: 1001
      fsGroup: 1001
    
    # Container security context
    containerSecurityContext:
      enabled: true
      runAsNonRoot: true
      runAsUser: 1001
    
    # Configuration
    configuration: |-
      # Redis configuration
      maxmemory 512mb
      maxmemory-policy allkeys-lru
      save 900 1
      save 300 10
      save 60 10000
      appendonly yes
      appendfsync everysec

# Replica configuration (disabled for standalone)
replica:
  enabled: false

# Sentinel configuration (disabled for standalone)
sentinel:
  enabled: false

# Metrics configuration
metrics:
  enabled: true
  service:
    type: ClusterIP
    port: 9121
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

# Network policy
networkPolicy:
  enabled: false

# Service account
serviceAccount:
  create: true
  name: "redis-service-account"

# Pod security context
podSecurityContext:
  enabled: true
  fsGroup: 1001

# Pod annotations
podAnnotations:
  project: "swiggy_dog_fooding"
  environment: "dog-fooding"

# Pod labels
podLabels:
  app: "redis"
  project: "swiggy_dog_fooding"
  environment: "dog-fooding"

# Node selector (optional)
nodeSelector: {}

# Tolerations (optional)
tolerations: []

# Affinity (optional)
affinity: {} 